trigger:
  branches:
    include:
    - main
  paths:
    include:
    - 'src'

pool:
  vmImage: 'ubuntu-latest'

name: $(major).$(minor).$(date:yy)$(DayOfYear)$(rev:.r)

steps:
- task: CmdLine@2
  inputs:
    script: 'sudo npm install -g tfx-cli'
  displayName: 'install tfx cli'

- task: RegExMatchReplace@2
  inputs:
    PathToFile: 'src/task/task.json'
    RegEx: '@@MAJOR@@'
    IgnoreCase: true
    MultiLine: true
    ValueToReplace: '$(major)'
  displayName: 'update major version @ task.json'

- task: RegExMatchReplace@2
  inputs:
    PathToFile: 'src/task/task.json'
    RegEx: '@@MINOR@@'
    IgnoreCase: true
    MultiLine: true
    ValueToReplace: '$(minor)'
  displayName: 'update minor version @ task.json'

- task: RegExMatchReplace@2
  inputs:
    PathToFile: 'src/task/task.json'
    RegEx: '@@PATCH@@'
    IgnoreCase: true
    MultiLine: true
    ValueToReplace: '$(date:yy)$(DayOfYear)$(rev:.r)'
  displayName: 'update patch version @ task.json'

- task: RegExMatchReplace@2
  inputs:
    PathToFile: 'vss-extension.json'
    RegEx: '@@VERSION@@'
    IgnoreCase: true
    MultiLine: true
    ValueToReplace: '$(major).$(minor).$(date:yy)$(DayOfYear)$(rev:.r)'
  displayName: 'update version @ vss-extension.json'

- task: CmdLine@2
  inputs:
    script: 'tfx extension create --manifest-globs vss-extension.json'
    workingDirectory: 'src'
  displayName: 'create task vsix'
- task: CopyFiles@2
  inputs:
    SourceFolder: 'src'
    Contents: '**.vsix'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'copy files to artifact folder'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'publish artifacts'